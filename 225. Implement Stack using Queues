class MyQueue {
        private final Stack<Integer> inputbuf;
        private final Stack<Integer> output;
    /** Initialize your data structure here. */
    public MyQueue() {
        inputbuf = new Stack<Integer>();
        output = new Stack<Integer>();
    }
    
    /** Push element x to the back of queue. */
    public void push(int x) {
        inputbuf.push(x);
    }
    
    /** Removes the element from in front of queue and returns that element. */
    public int pop() {
        peek();
        return output.pop();
        
    }
    
    /** Get the front element. */
    public int peek() {
        if (output.empty()) {
            while (!inputbuf.empty()) {
                output.push(inputbuf.pop());//input存入且消除。output进入
            }
        }
        return output.peek();
    }
    
    /** Returns whether the queue is empty. */
    public boolean empty() {
        return inputbuf.empty() && output.empty();
    }
}
