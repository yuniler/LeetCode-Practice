/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeElements(ListNode head, int val) {
        //删除头结点--
        while(head != null && head.val == val){//删除头节点后，新跟的节点也有可能为同，用循环
            head = head.next;
        }
        if(head == null) return head;
        ListNode prev = head;
        
        while(prev.next != null){//第一个节点已经不为空。判断当前的下一个
            if(prev.next.val == val){
                prev.next = prev.next.next;
            }else{
                prev = prev.next;
            }
        }
        return head;
    }
}
